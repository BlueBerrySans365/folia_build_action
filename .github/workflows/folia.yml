# This is a basic workflow to help you get started with Actions

name: folia

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  #schedule:
  #  - cron: "0 16 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-default-branch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: set the git information
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          
      - name: setup env
        run: |
          sudo apt update
          sudo apt-get install openjdk-17-jdk  --fix-missing
          # set-timezone
          sudo timedatectl set-timezone Asia/Shanghai


      # Runs a set of commands using the runners shell
      - name: clone folia repo
        run: |
          git clone https://github.com/PaperMC/Folia.git ~/folia
          git checkout 1e5e2154c9f88d788cecf0b9fcc77ece7d1f8663
          
      - name: applyPathches
        run: |
          cd ~/folia
          ./gradlew applyPatches
          
      - name: building...
        run: |
          cd ~/folia
          ./gradlew createReobfBundlerJar

      # Get the date of the build
      #- name: Get date
      #  id: date
      #  run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
      #- name: get jar file name
       # id: get_name
       # run: echo "::set-output name=name::$(ls ~/folia/build/libs/)"

      # Create a release with the date as the title and tag
      #- name: Create Release
       # id: create_release
        #uses: actions/create-release@v1
        #env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
        #  tag_name: ${{ steps.date.outputs.date }}
         # release_name: ${{ steps.date.outputs.date }}
          #draft: false
          #prerelease: false
      
      # Upload the jar file to the release as an asset
     # - name: Upload Release Asset
     #   id: upload-release-asset 
     #   uses: actions/upload-release-asset@v1
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #   with:
     #     upload_url: ${{ steps.create_release.outputs.upload_url }} 
     #     asset_path: /home/runner/folia/build/libs/${{ steps.get_name.outputs.name }}
     #     asset_name: ${{ steps.get_name.outputs.name }}
     #     asset_content_type: application/java-archive

      #- name: set upload_url
      #  id: set_upload_url
      #  uses: noobly314/share-data@v1
      #  with:
      #    share-id: release_url
      #    mode: set
      #    key: url
      #    value: ${{ steps.create_release.outputs.upload_url }}
    #permissions:
     # contents: write
